name: Deploy Portfolio

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_INSTANCE_SG_ID: ${{ secrets.AWS_INSTANCE_SG_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-central-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.3

      - name: Run Terraform and set GitGub secrets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ../fetch_and_set_secrets.sh

      - name: Log in to Amazon ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/v2w5z6p0

      - name: Build Docker image
        run: docker build -t portfolio .

      - name: Tag and push Docker image
        run: |
          docker tag portfolio:latest public.ecr.aws/v2w5z6p0/portfolio_docker_repository:latest
          docker push public.ecr.aws/v2w5z6p0/portfolio_docker_repository:latest

      - name: Get runner IP address
        id: ip
        run: echo "IP=$(curl -s http://checkip.amazonaws.com)" >> $GITHUB_ENV

      - name: Whitelist runner IP address
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_INSTANCE_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ env.IP }}/32 --debug

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "Testing SSH connection..."
            ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ec2-user@${{ secrets.EC2_HOST }} 'echo "SSH connection successful"'
            docker pull public.ecr.aws/v2w5z6p0/portfolio_docker_repository:latest
            docker stop portfolio || true
            docker rm portfolio || true
            docker run -d --name portfolio -p 3001:3000 public.ecr.aws/v2w5z6p0/portfolio_docker_repository:latest

      - name: Revoke runner IP address
        if: always()
        run: |
          echo "Revoking IP address: ${{ env.IP }}/32 from security group $AWS_INSTANCE_SG_ID"
          aws ec2 revoke-security-group-ingress \
            --group-id $AWS_INSTANCE_SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${{ env.IP }}/32
