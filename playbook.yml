- hosts: all
  become: true
  tasks:
    - name: Update all packages to the latest version
      dnf:
        name: '*'
        state: latest

    - name: Install Docker
      dnf:
        name: docker
        state: present

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add ec2-user to docker group
      user:
        name: ec2-user
        groups: docker
        append: yes

    - name: Install NGINX
      dnf:
        name: nginx
        state: present

    - name: Create NGINX configuration for Gaginislatkisi
      copy:
        dest: /etc/nginx/conf.d/gaginislatkisi.conf
        content: |
          server {
               
                server_name gaginislatkisi.com www.gaginislatkisi.com;
                location / {
                  proxy_pass http://localhost:3000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
                }
              }
      notify: Restart NGINX

    - name: Create NGINX configuration for Portfolio
      copy:
        dest: /etc/nginx/conf.d/ivanravic.conf
        content: |
          server {
                listen 80 default_server;
                server_name ivanravic.com www.ivanravic.com;
                location / {
                  proxy_pass http://localhost:3001;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
                }
              }
      notify: Restart NGINX

    - name: Restart NGINX to apply configuration
      service:
        name: nginx
        state: restarted

    - name: Install python3 and pip3
      dnf:
        name: ['python3', 'python3-pip']
        state: present

    - name: Set environment variables
      lineinfile:
        path: /etc/environment
        line: "RESEND_API_KEY={{ lookup('env', 'RESEND_API_KEY') }}"
        create: yes

    - name: Run Docker container with environment variables
      command: docker run -d --name portfolio -p 3001:3000 -e RESEND_API_KEY={{ lookup('env', 'RESEND_API_KEY') }} public.ecr.aws/v2w5z6p0/portfolio_docker_repository:latest

    # Reboot the server if needed
    - name: Check if a reboot is required
      command: 'needs-restarting -r'
      register: reboot_required
      changed_when: reboot_required.rc == 1
      failed_when: reboot_required.rc not in [0, 1]

    - name: Reboot the server if required
      reboot:
      when: reboot_required.rc == 1
      become: true

  handlers:
    - name: Restart NGINX
      service:
        name: nginx
        state: restarted
